{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","visibleTodos","todosId","App","useState","setUserId","setTitle","isCorrectTitle","setIsCorrectTitle","isCorrectUser","setIsCorrectUser","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","push","getTodo","htmlFor","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4d5ae6d.chunk.js","sourcesContent":["import { User } from '../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { name, email } }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames(\n          'TodoInfo',\n          {\n            'TodoInfo--completed': completed,\n          },\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\n\nconst getUser = (userId: number): User | null => usersFromServer\n  .find(user => user.id === userId) || null;\n\nconst visibleTodos: Todo[] = todosFromServer\n  .map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\nconst todosId = visibleTodos\n  .map(todo => todo.id);\n\nexport const App = () => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [isCorrectTitle, setIsCorrectTitle] = useState(true);\n  const [isCorrectUser, setIsCorrectUser] = useState(true);\n\n  const getTodo = (): void => {\n    const newTodo: Todo = {\n      id: Math.max(...todosId) + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    visibleTodos.push(newTodo);\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setIsCorrectUser(true);\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsCorrectTitle(true);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setIsCorrectUser(false);\n    }\n\n    if (!title.trim()) {\n      setIsCorrectTitle(false);\n    }\n\n    if (!userId || !title.trim()) {\n      return;\n    }\n\n    getTodo();\n\n    setUserId(0);\n    setTitle('');\n    setIsCorrectTitle(true);\n    setIsCorrectUser(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            <span>{'Title: '}</span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n            {\n              isCorrectTitle\n                || <span className=\"error\">Please enter a title</span>\n            }\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userId\">\n            <span>{'User: '}</span>\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleChangeUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(({ name, id }) => (\n                <option value={id} key={id}>{name}</option>\n              ))}\n\n            </select>\n\n            {\n              isCorrectUser\n              || <span className=\"error\">Please choose a user</span>\n            }\n          </label>\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}